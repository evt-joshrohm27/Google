// Overrides for .mdc-layout-grid

.googlesitekit-plugin {

	.mdc-layout-grid + .mdc-layout-grid {
		padding-top: 0;
	}

	.mdc-layout-grid--collapsed {
		padding: 0;

		.mdc-layout-grid__inner {
			grid-gap: 0;
		}
	}

	.mdc-layout-grid--fill .mdc-layout-grid__inner {
		height: 100%;
	}

	/*
	* Grid Cells
	*/
	$breakpoints: (
		phone: 0,
		tablet: 601px,
		desktop: 961px,
	);

	// Cell Alignment Defaults
	.mdc-layout-grid__cell--align-left {
		margin-right: auto;
		width: auto;

		@supports (display: grid) {
			justify-self: start;
		}
	}

	.mdc-layout-grid__cell--align-right {
		margin-left: auto;
		width: auto;

		@supports (display: grid) {
			justify-self: end;
		}
	}

	// Cell Alignment Specific Sizes, Mobile First
	@each $name, $size in $breakpoints {

		@media (min-width: #{$size}) {

			.mdc-layout-grid__cell--align-right-#{$name} {
				margin-left: auto;
				width: auto;

				@supports (display: grid) {
					justify-self: end;
				}
			}
		}
	}

	// Cell Offset Defaults
	@media (min-width: $bp-tablet) {

		@for $i from 1 through 12 {

			.mdc-layout-grid__cell--offset-#{$i} {
				margin-left: percentage($i / 12);

				@supports (display: grid) {
					margin-left: 0;
				}
			}

			.mdc-layout-grid__cell--start-#{$i} {
				grid-column-start: $i + 1;
			}
		}
	}

	// Cell Offset Specific Sizes, Mobile First
	@each $name, $size in $breakpoints {

		@media (min-width: #{$size}) {

			@for $i from 1 through 12 {

				.mdc-layout-grid__cell--offset-#{$i}-#{$name} {
					margin-left: percentage($i / 12);

					@supports (display: grid) {
						margin-left: 0;
					}
				}

				.mdc-layout-grid__cell--start-#{$i}-#{$name} {
					grid-column-start: $i + 1;
				}
			}
		}
	}

	// Grid ordering for specific breakpoints
	@each $name, $size in $breakpoints {

		@media (min-width: #{$size}) {

			@for $i from 1 through 12 {

				.mdc-layout-grid__cell--order-#{$i}-#{$name} {
					order: #{$i};
				}
			}
		}
	}
}
